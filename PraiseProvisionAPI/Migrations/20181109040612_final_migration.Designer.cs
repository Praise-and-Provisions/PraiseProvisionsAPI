// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PraiseProvisionsAPI.Data;

namespace PraiseProvisionAPI.Migrations
{
    [DbContext(typeof(PraiseDBContext))]
    [Migration("20181109040612_final_migration")]
    partial class final_migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PraiseProvisionsAPI.Models.Chef", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChefImage");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("ID");

                    b.ToTable("Chefs");

                    b.HasData(
                        new { ID = 1, ChefImage = "https://cdn.vox-cdn.com/thumbor/wwYnkFN9L0OGT6gf5pUOfjcmy_s=/0x0:2000x1498/1200x800/filters:focal(877x266:1197x586)/cdn.vox-cdn.com/uploads/chorus_image/image/58429809/david_chang.0.jpg", FirstName = "David", LastName = "Chang" },
                        new { ID = 2, ChefImage = "https://vegnews.com/media/W1siZiIsIjEyMjkzL1ZlZ05ld3NHb3Jkb25SYW1zYXkzLnBuZyJdLFsicCIsInRodW1iIiwiNjgweDQwMiMiLHsiZm9ybWF0IjoianBnIn1dLFsicCIsIm9wdGltaXplIl1d/VegNewsGordonRamsay3.png?sha=cfaa733eb7ada4e4", FirstName = "Gordon", LastName = "Ramsey" },
                        new { ID = 3, ChefImage = "https://cdn.vox-cdn.com/thumbor/ejyNZqnfoNZY1kcCcGOb0xVJEW8=/1400x1400/filters:format(jpeg)/cdn.vox-cdn.com/uploads/chorus_asset/file/9439331/AUTHOR_PHOTO._RENE_REDZEPI._Photo_Credit_Laura_Lajh_Prijatelj.jpg", FirstName = "Rene", LastName = "Redzepi" },
                        new { ID = 4, ChefImage = "https://cdn.japantimes.2xx.jp/wp-content/uploads/2014/09/p24-joe-jg-a-20140928.jpg", FirstName = "Jean", LastName = "Georges" },
                        new { ID = 5, ChefImage = "https://s3-us-west-2.amazonaws.com/nnaka/wp-content/uploads/2016/02/07043256/nnaka_niki_nakayama.jpg", FirstName = "Niki", LastName = "Nakayama" },
                        new { ID = 6, ChefImage = "https://pbs.twimg.com/profile_images/878592689595453442/WWbTrWHF.jpg", FirstName = "Eddie", LastName = "Huang" }
                    );
                });

            modelBuilder.Entity("PraiseProvisionsAPI.Models.Favorites", b =>
                {
                    b.Property<int>("ChefID");

                    b.Property<int>("RestaurantID");

                    b.Property<string>("Reviews");

                    b.HasKey("ChefID", "RestaurantID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("Favorites");

                    b.HasData(
                        new { ChefID = 1, RestaurantID = 1, Reviews = "The best fried chicken you can get in the Pacific North West!" },
                        new { ChefID = 1, RestaurantID = 2, Reviews = "Must try the crispy duck leg with quinoa!" },
                        new { ChefID = 1, RestaurantID = 3, Reviews = "If it’s good enough for Jay-Z and Beyonce, it’s good enough for me!" },
                        new { ChefID = 3, RestaurantID = 4, Reviews = "The sort of joint we’d all like to have at the end of our street." },
                        new { ChefID = 5, RestaurantID = 5, Reviews = "Rotating menu with seasonal options, perfect portions and the best ingredients." },
                        new { ChefID = 4, RestaurantID = 6, Reviews = "This tucked away bistro, hardly one of PDX's best kept secrets, is a no-frills, saddle-up-to-the-bar-to-order kind of place." },
                        new { ChefID = 4, RestaurantID = 7, Reviews = "Perfect ambience, quality flavorful food and great service." },
                        new { ChefID = 6, RestaurantID = 8, Reviews = "A New York City steakhouse institution-- eating here is an experience unlike any other in the city." }
                    );
                });

            modelBuilder.Entity("PraiseProvisionsAPI.Models.Restaurant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.Property<string>("RestaurantImage");

                    b.HasKey("ID");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new { ID = 1, Address = "2122 NE 65th St. Seattle, WA 98115", City = "Seattle", Description = "Classic Southern fare made with heirloom ingredients is served in a stylish locale with cocktails.", Name = "JuneBaby", RestaurantImage = "https://photos.smugmug.com/Seattle-Restaurant-Photography/2017/Junebaby/i-7sXBgZX/1/35d0094e/L/Pratt_Junebaby_006-L.jpg" },
                        new { ID = 2, Address = "2404 NE 65th St, Seattle, WA 98115", City = "Seattle", Description = "Eclectic menu featuring nose-to-tail local meats & creative veggie dishes in a contemporary room.", Name = "Salare", RestaurantImage = "https://resizer.otstatic.com/v2/photos/large/25144284.jpg" },
                        new { ID = 3, Address = "575 Henry St, Brooklyn, NY 11231", City = "Brooklyn", Description = "Popular neighborhood eatery serves thin - crust pizza & guests bring their own wine & beer.", Name = "Lucali", RestaurantImage = "https://pixel.nymag.com/imgs/daily/grub/2016/best-of-new-york/best-carrol-gardens-restaurant-lucali.w710.h473.jpg" },
                        new { ID = 4, Address = "524 Court St, Brooklyn, NY 11231", City = "Brooklyn", Description = "Quaint eatery offering a hearty American comfort - food menu & a popular weekend brunch.", Name = "Buttermilk Channel", RestaurantImage = "https://www.tokyoweekender.com/wp-content/uploads/2018/10/%C3%A5%C2%A5%C3%A8h%C3%ACX%C3%AC%E2%80%A1%C3%A4%C5%93-1-1170x500.jpg" },
                        new { ID = 5, Address = "2360, 1205 SW Washington St, Portland, OR 97205", City = "Portland", Description = "Italian cafe serves handmade pastas in industrial digs amid a huge eagle mural & communal tables.", Name = "Grassa", RestaurantImage = "https://res.cloudinary.com/sagacity/image/upload/c_crop/c_fit,h_640,w_960/6-13-grassa-opening_2_iqx7zu" },
                        new { ID = 6, Address = "835 SW 2nd Ave, Portland, OR 97204", City = "Portland", Description = "Popular counter - serve offering pho, banh mi & other Vietnamese favorites in a stylish setting.", Name = "Luc Lac Vietnamese Kitchen", RestaurantImage = "https://img1.10bestmedia.com/Images/Photos/337486/IMG-7101_54_990x660.JPG" },
                        new { ID = 7, Address = "214 Smith St, Brooklyn, NY 11201", City = "Brooklyn", Description = "Classic neighborhood French bistro brings in crowds with its brunch & garden seating.", Name = "Cafe Luluc", RestaurantImage = "http://ourbksocial.com/wp-content/uploads/2015/05/unnamed11.jpg" },
                        new { ID = 8, Address = "178 Broadway, Brooklyn, NY 11211", City = "Brooklyn", Description = "Iconic steakhouse where old-school waiters serve aged beef in a German beer hall setting.", Name = "Peter Luger", RestaurantImage = "https://d1t295ks1d26ah.cloudfront.net/media/pictures/files/000/008/958/xlarge_desktop/x1.jpg?1424289053" }
                    );
                });

            modelBuilder.Entity("PraiseProvisionsAPI.Models.Favorites", b =>
                {
                    b.HasOne("PraiseProvisionsAPI.Models.Chef", "Chef")
                        .WithMany("Favorites")
                        .HasForeignKey("ChefID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PraiseProvisionsAPI.Models.Restaurant", "Restaurant")
                        .WithMany("Favorites")
                        .HasForeignKey("RestaurantID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
