// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PraiseProvisionsAPI.Data;

namespace PraiseProvisionAPI.Migrations
{
    [DbContext(typeof(PraiseDBContext))]
    partial class PraiseDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PraiseProvisionsAPI.Models.Chef", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.HasKey("ID");

                    b.ToTable("Chefs");

                    b.HasData(
                        new { ID = 1, City = "Albany", FirstName = "Paula", LastName = "Deen" },
                        new { ID = 2, City = "Los Angeles", FirstName = "Gordon", LastName = "Ramsey" },
                        new { ID = 3, City = "Jamaica", FirstName = "Jimmy", LastName = "Fallon" },
                        new { ID = 4, City = "Omaha", FirstName = "Jack", LastName = "TheRipper" }
                    );
                });

            modelBuilder.Entity("PraiseProvisionsAPI.Models.Favorites", b =>
                {
                    b.Property<int>("ChefID");

                    b.Property<int>("RestaurantID");

                    b.HasKey("ChefID", "RestaurantID");

                    b.HasIndex("RestaurantID");

                    b.ToTable("Favorites");

                    b.HasData(
                        new { ChefID = 3, RestaurantID = 1 },
                        new { ChefID = 1, RestaurantID = 4 }
                    );
                });

            modelBuilder.Entity("PraiseProvisionsAPI.Models.Restaurant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Description");

                    b.Property<string>("Name");

                    b.HasKey("ID");

                    b.ToTable("Restaurants");

                    b.HasData(
                        new { ID = 1, Address = "1411 156th Ave NE, Ste A, Bellevue, WA 98007", Description = "Chinese, Hot Pot", Name = "Little Sheep Mongolian Hot Pot" },
                        new { ID = 2, Address = "14330 Lake City Way NE, Seattle, WA 98125", Description = "Southern, Soul Food, Fast Food ", Name = "Heaven Sent Fried Chicken" },
                        new { ID = 3, Address = "700 Bellevue Way NE, Ste 280, Bellevue, WA 98004", Description = "Taiwanese, Dim Sum, Shanghainese", Name = "Din Tai Fung" },
                        new { ID = 4, Address = "2115 Westlake Ave, Seattle, WA 98121", Description = "Fast Food, American (Traditional), Burgers", Name = "Shake Shack" },
                        new { ID = 5, Address = "12405 SE 38th St, Bellevue, WA 98006", Description = "Steakhouses, Brazilian", Name = "Novilhos Brazilian Steak House" }
                    );
                });

            modelBuilder.Entity("PraiseProvisionsAPI.Models.Favorites", b =>
                {
                    b.HasOne("PraiseProvisionsAPI.Models.Chef", "Chef")
                        .WithMany("Favorites")
                        .HasForeignKey("ChefID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("PraiseProvisionsAPI.Models.Restaurant", "Restaurant")
                        .WithMany("Favorites")
                        .HasForeignKey("RestaurantID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
